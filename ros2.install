#!/bin/bash

DIR="$( cd "$( dirname "$BASH_SOURCE" )" && pwd -P )"

if [ $(python3 -V 2>&1 | sed 's/.* \([0-9]\).\([0-9]\).*/\1\2/') != 38 ]; then
	echo " setting env python3 version: 3.8 ..."
	exit 0
fi

# install ros2
sudo apt update && sudo apt install locales

sudo locale-gen en_US en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
export LANG=en_US.UTF-8

sudo apt update && sudo apt install curl gnupg2 lsb-release
sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu focal main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

sudo apt update
sudo apt install -y \
		 ros-foxy-desktop \
		 ros-foxy-rmw-fastrtps* \
		 ros-foxy-rmw-cyclonedds*

# install tools
sudo apt update && sudo apt install -y \
		 build-essential \
		 cmake \
		 git \
		 libbullet-dev \
		 python3-colcon-common-extensions \
		 python3-flake8 \
		 python3-pip \
		 python3-pytest-cov \
		 python3-rosdep \
		 python3-setuptools \
		 python3-vcstool \
		 wget

# install pip packages
python3 -m pip install -U \
			argcomplete \
			flake8-blind-except \
			flake8-builtins \
			flake8-class-newline \
			flake8-comprehensions \
			flake8-deprecated \
			flake8-docstrings \
			flake8-import-order \
			flake8-quotes \
			pytest-repeat \
			pytest-rerunfailures \
			pytest

# install tools 2
sudo apt install --no-install-recommends -y \
		 libasio-dev \
		 libtinyxml2-dev \
		 libcunit1-dev

# build test
if [ -z $(find ${HOME} -name robot_ws) ]; then
	source /opt/ros/foxy/setup.bash
	mkdir -p ${HOME}/robot_ws/src
	mkdir -p ${HOME}/robot_ws/.vscode
fi

cd ~/robot_ws/
colcon build --symlink-install

# bash setting
if [ -z $(grep "ROS setting" ~/.bashrc) ]; then
	cat ${DIR}/ros2.rc >> ~/.bashrc
else
	echo "===== set ros2 already ====="
fi

source ~/.bashrc

# install VS code
#sudo apt update
#sudo apt install software-properties-common apt-transport-https wget
#wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
#sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
#sudo apt install code

# set VS code
#sudo cp ${DIR}/VSconfig/settings.json ~/.config/Code/User/
#sudo cp ${DIR}/VSconfig/c_cpp_properties.json ~/robot_ws/.vscode/
#sudo cp ${DIR}/VSconfig/tasks.json ~/robot_ws/.vscode/
#sudo cp ${DIR}/VSconfig/launch.json ~/robot_ws/.vscode/

sudo apt install -y qtcreator
